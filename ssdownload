#!/bin/bash

function command_exists { command -v "$1" >/dev/null 2>&1 ; }
function setmd5 { MD5=$(md5sum "${1}") ; MD5="${MD5%% *}" ; }

function showusage {
cat <<EOF >&2

NAME
   ssdownload - download a simple secrets from S3. 
   
SYNOPSIS
   PASS=password123 ssdownload BUCKET NAME > myfile

DESCRIPTION
   Retrieves the given secret, decrypting using the password supplied.
   See https://github.com/j842/docker-simplesecrets for the upload mechanism.
   All paramters must match those used at upload.
   
RETURN VALUE
   0   - success
   1   - error
   
EOF
   exit 1  
}

# ungpg INPUT PASSPHRASE
function ungpg { 
   gpg --yes --batch --passphrase="$2" "$1" > /dev/null 2>&1 ;
   if [ ! -e "${1%.*}" ]; then
      echo "The requested file exists but decyption failed. Incorrect passphrase?" >&2
      exit 1
   fi
   }

function cleanup {
   rm "$FNAME" "${FNAME}.gpg" "$FNAME.md5"
   }

# download SAVEAS S3NAME
function download {
   wget -nv -O "$1" "http://${BUCKET}.s3.amazonaws.com/simplesecrets/${2}"  >/dev/null 2>&1
   if [ $? -ne 0 ] || [ ! -e ${1} ]; then echo "The requested file doesn't exist." >&2 ; exit 1 ; fi   
   }


#----------------------


# string is null test
if [ $# -ne 2 ]; then echo "Wrong number of arguments." >&2 ; showusage; fi

BUCKET="$1"
NAME="$2"

if [ -z "$PASS" ]; then echo "PASS environment variable is not set. Unable to continue." >&2 ; showusage ; fi

COMMANDS=(gpg wget md5sum)
for CMD in "${COMMANDS[@]}"; do
  if ! command_exists "${CMD}" ; then echo "ssdownload requires ${CMD}" >&2 ; exit 1 ; fi
done

# Download the encrypted file.
FNAME="/tmp/newfile"
if [ -e "$FNAME" ]; then echo "Blocked by existing file at $FNAME" >&2 ; exit 1 ; fi   # should never happen

download "${FNAME}.gpg" "${NAME}.gpg"
download "${FNAME}.md5" "${NAME}.md5"

# Decrypt.
ungpg "${FNAME}.gpg" "$PASS"
setmd5 "${FNAME}"

STOREDMD5=$(<"${FNAME}.md5")

# Check MD5.
if [ "${MD5}" != "${STOREDMD5}" ]; then
   echo "File is corrupt." >&2
   echo "Got MD5:  ${MD5}" >&2
   echo "Expected: ${STOREDMD5}" >&2
   echo " " >&2
   cat "$FNAME" >&2
   cleanup
   exit 1
fi

# Output
cat "$FNAME"
cleanup
exit 0
