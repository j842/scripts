#!/bin/bash

function command_exists { command -v "$1" >/dev/null 2>&1 ; }
function setmd5 { MD5=$(md5sum "${1}") ; MD5="${MD5%% *}" ; }

function showusage {
cat <<EOF >&2

NAME
   ssdownload - download a simple secrets from S3. 
   
SYNOPSIS
   PASS=password123 ssdownload BUCKET HASH [NAME] > myfile

DESCRIPTION
   Retrieves the given secret, decrypting using the password supplied.
   See https://github.com/j842/docker-simplesecrets
   
RETURN VALUE
   0   - success
   1   - error
   
EOF
   exit 1  
}

# ungpg INPUT PASSPHRASE
function ungpg { 
   gpg --yes --batch --passphrase="$2" "$1" > /dev/null 2>&1 ;
   if [ ! -e "${1%.*}" ]; then
      echo "Decyption failed. Passphrase or hash likely incorrect."
      exit 1
   fi
   }

# string is null test
if [ $# -lt 2 ] || [ $# -gt 3 ]; then echo "Wrong number of arguments." >&2 ; showusage; fi

BUCKET="$1"
HASH="$2"
NAME="$2"
if [ -z "$3" ]; then NAME="$3"; fi

if [ -z "${PASS}" ]; then echo "PASS environment variable not set" >&2 ; showusage ; fi

COMMANDS=(gpg wget md5sum)
for CMD in "${COMMANDS[@]}"; do
  if ! command_exists "${CMD}" ; then echo "ssdownload requires ${CMD}" >&2 ; exit 1 ; fi
done

# Download the encrypted file.
FNAME="/tmp/newfile"
if [ -e "$FNAME" ]; then echo "Blocked by existing file at $FNAME" >&2 ; exit 1 ; fi 

wget -nv -O ${FNAME}.gpg.gpg "http://${BUCKET}.s3.amazonaws.com/simplesecrets/${NAME}"  >/dev/null 2>&1
if [ $? -ne 0 ] || [ ! -e ${FNAME}.gpg.gpg ]; then echo "The requested file wasn't downloaded successfully." >&2 ; exit 1 ; fi

# Decrypt.
ungpg "${FNAME}.gpg.gpg" "$PASS"
ungpg "${FNAME}.gpg" "$HASH"
setmd5 "${FNAME}"

# Check MD5.
if [ "${MD5}" != "${HASH}" ]; then
   echo "File is corrupt." >&2
   echo "Got MD5:  ${MD5}" >&2
   echo "Expected: ${HASH}" >&2
   echo " " >&2
   cat ${FNAME} >&2
   exit 1
fi

# Output
cat ${FNAME}

exit 0
